#Diffe Helman Key Exchange
import random
import math

def checkPrime(num):
  for i in range(2, math.ceil(math.sqrt(num)) +1):
    if num % i == 0:
      return False
    else:
      continue
  return True


#formula is pow(g,privatekey) mod n
g=int(random.randint(2,15))
n=int(random.randint(2,15))
while(True):
  if(checkPrime(g) and checkPrime(n)) and g!=n:
    break
  else:
    g = int(random.randint(2,15))
    n = int(random.randint(2,15))

alice = int(input("Enter alice's private key: "))
bob = int(input("Enter bob's private key: "))
A = int((math.pow(g,alice)) % n)
B = int((math.pow(g,bob)) % n)
k1 = int((math.pow(B,alice)) % n)
k2 = int((math.pow(A,bob)) % n)
print(f'The values are: g={g} n={n} alice={alice} bob={bob} a={A} b={B} k1={k1}')
if(k1==k2):
  print("yes....callable")
